{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","ch","document","addEventListener","event","setState","key","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,GAAI,MAFR,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,GAAIG,EAAME,WAPhC,kCAWE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,GAAIG,EAAME,WAbhC,oBAiBE,WACE,OACE,qBAAKE,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIC,KAAKT,MAAMC,GAAZ,mCAC+BQ,KAAKT,MAAMC,GAD1C,KAEG,kCAvBd,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.1f8ca3fe.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  ch: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    ch: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ ch: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ ch: event.key });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(this.state.ch)\n            ? `The last pressed key is [${this.state.ch}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}